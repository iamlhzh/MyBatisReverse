<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stock.accelerator.web.dao.AppActivityNoticeLogMapper">
  <resultMap id="BaseResultMap" type="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="activity_id" jdbcType="VARCHAR" property="activityId" />
    <result column="send_person" jdbcType="VARCHAR" property="sendPerson" />
    <result column="email_title" jdbcType="VARCHAR" property="emailTitle" />
    <result column="notice_type" jdbcType="VARCHAR" property="noticeType" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="business" jdbcType="VARCHAR" property="business" />
    <result column="ssid" jdbcType="VARCHAR" property="ssid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <result column="receive_person" jdbcType="LONGVARCHAR" property="receivePerson" />
    <result column="cc_person" jdbcType="LONGVARCHAR" property="ccPerson" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, send_person, email_title, notice_type, create_user, create_time, 
    update_user, update_time, status, business, ssid
  </sql>
  <sql id="Blob_Column_List">
    receive_person, cc_person, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample">
    delete from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log (id, activity_id, send_person, 
      email_title, notice_type, create_user, 
      create_time, update_user, update_time, 
      status, business, ssid, 
      receive_person, cc_person, content
      )
    values (#{id,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR}, #{sendPerson,jdbcType=VARCHAR}, 
      #{emailTitle,jdbcType=VARCHAR}, #{noticeType,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{business,jdbcType=VARCHAR}, #{ssid,jdbcType=VARCHAR}, 
      #{receivePerson,jdbcType=LONGVARCHAR}, #{ccPerson,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="sendPerson != null">
        send_person,
      </if>
      <if test="emailTitle != null">
        email_title,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="business != null">
        business,
      </if>
      <if test="ssid != null">
        ssid,
      </if>
      <if test="receivePerson != null">
        receive_person,
      </if>
      <if test="ccPerson != null">
        cc_person,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="activityId != null">
        #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="sendPerson != null">
        #{sendPerson,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultType="java.lang.Long">
    select count(*) from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_notice_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendPerson != null">
        send_person = #{record.sendPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTitle != null">
        email_title = #{record.emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeType != null">
        notice_type = #{record.noticeType,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.business != null">
        business = #{record.business,jdbcType=VARCHAR},
      </if>
      <if test="record.ssid != null">
        ssid = #{record.ssid,jdbcType=VARCHAR},
      </if>
      <if test="record.receivePerson != null">
        receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ccPerson != null">
        cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      send_person = #{record.sendPerson,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR},
      receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      send_person = #{record.sendPerson,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="sendPerson != null">
        send_person = #{sendPerson,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        email_title = #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        business = #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        ssid = #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      send_person = #{sendPerson,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR},
      receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      send_person = #{sendPerson,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="activity_id" jdbcType="VARCHAR" property="activityId" />
    <result column="send_person" jdbcType="VARCHAR" property="sendPerson" />
    <result column="email_title" jdbcType="VARCHAR" property="emailTitle" />
    <result column="notice_type" jdbcType="VARCHAR" property="noticeType" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="business" jdbcType="VARCHAR" property="business" />
    <result column="ssid" jdbcType="VARCHAR" property="ssid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <result column="receive_person" jdbcType="LONGVARCHAR" property="receivePerson" />
    <result column="cc_person" jdbcType="LONGVARCHAR" property="ccPerson" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, send_person, email_title, notice_type, create_user, create_time, 
    update_user, update_time, status, business, ssid
  </sql>
  <sql id="Blob_Column_List">
    receive_person, cc_person, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample">
    delete from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log (id, activity_id, send_person, 
      email_title, notice_type, create_user, 
      create_time, update_user, update_time, 
      status, business, ssid, 
      receive_person, cc_person, content
      )
    values (#{id,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR}, #{sendPerson,jdbcType=VARCHAR}, 
      #{emailTitle,jdbcType=VARCHAR}, #{noticeType,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{business,jdbcType=VARCHAR}, #{ssid,jdbcType=VARCHAR}, 
      #{receivePerson,jdbcType=LONGVARCHAR}, #{ccPerson,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="sendPerson != null">
        send_person,
      </if>
      <if test="emailTitle != null">
        email_title,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="business != null">
        business,
      </if>
      <if test="ssid != null">
        ssid,
      </if>
      <if test="receivePerson != null">
        receive_person,
      </if>
      <if test="ccPerson != null">
        cc_person,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="activityId != null">
        #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="sendPerson != null">
        #{sendPerson,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultType="java.lang.Long">
    select count(*) from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_notice_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=VARCHAR},
      </if>
      <if test="record.sendPerson != null">
        send_person = #{record.sendPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTitle != null">
        email_title = #{record.emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeType != null">
        notice_type = #{record.noticeType,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.business != null">
        business = #{record.business,jdbcType=VARCHAR},
      </if>
      <if test="record.ssid != null">
        ssid = #{record.ssid,jdbcType=VARCHAR},
      </if>
      <if test="record.receivePerson != null">
        receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ccPerson != null">
        cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      send_person = #{record.sendPerson,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR},
      receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      send_person = #{record.sendPerson,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="sendPerson != null">
        send_person = #{sendPerson,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        email_title = #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        business = #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        ssid = #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      send_person = #{sendPerson,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR},
      receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      send_person = #{sendPerson,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="activity_id" jdbcType="VARCHAR" property="activityId" />
    <result column="email_title" jdbcType="VARCHAR" property="emailTitle" />
    <result column="notice_type" jdbcType="VARCHAR" property="noticeType" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="business" jdbcType="VARCHAR" property="business" />
    <result column="ssid" jdbcType="VARCHAR" property="ssid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <result column="receive_person" jdbcType="LONGVARCHAR" property="receivePerson" />
    <result column="cc_person" jdbcType="LONGVARCHAR" property="ccPerson" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, email_title, notice_type, create_user, create_time, update_user, 
    update_time, status, business, ssid
  </sql>
  <sql id="Blob_Column_List">
    receive_person, cc_person, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample">
    delete from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log (id, activity_id, email_title, 
      notice_type, create_user, create_time, 
      update_user, update_time, status, 
      business, ssid, receive_person, 
      cc_person, content)
    values (#{id,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR}, #{emailTitle,jdbcType=VARCHAR}, 
      #{noticeType,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{business,jdbcType=VARCHAR}, #{ssid,jdbcType=VARCHAR}, #{receivePerson,jdbcType=LONGVARCHAR}, 
      #{ccPerson,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="emailTitle != null">
        email_title,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="business != null">
        business,
      </if>
      <if test="ssid != null">
        ssid,
      </if>
      <if test="receivePerson != null">
        receive_person,
      </if>
      <if test="ccPerson != null">
        cc_person,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="activityId != null">
        #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultType="java.lang.Long">
    select count(*) from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_notice_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTitle != null">
        email_title = #{record.emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeType != null">
        notice_type = #{record.noticeType,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.business != null">
        business = #{record.business,jdbcType=VARCHAR},
      </if>
      <if test="record.ssid != null">
        ssid = #{record.ssid,jdbcType=VARCHAR},
      </if>
      <if test="record.receivePerson != null">
        receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ccPerson != null">
        cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR},
      receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        email_title = #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        business = #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        ssid = #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR},
      receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <resultMap id="BaseResultMap" type="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="activity_id" jdbcType="VARCHAR" property="activityId" />
    <result column="email_title" jdbcType="VARCHAR" property="emailTitle" />
    <result column="notice_type" jdbcType="VARCHAR" property="noticeType" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="business" jdbcType="VARCHAR" property="business" />
    <result column="ssid" jdbcType="VARCHAR" property="ssid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <result column="receive_person" jdbcType="LONGVARCHAR" property="receivePerson" />
    <result column="cc_person" jdbcType="LONGVARCHAR" property="ccPerson" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, activity_id, email_title, notice_type, create_user, create_time, update_user, 
    update_time, status, business, ssid
  </sql>
  <sql id="Blob_Column_List">
    receive_person, cc_person, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from activity_notice_log
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample">
    delete from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log (id, activity_id, email_title, 
      notice_type, create_user, create_time, 
      update_user, update_time, status, 
      business, ssid, receive_person, 
      cc_person, content)
    values (#{id,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR}, #{emailTitle,jdbcType=VARCHAR}, 
      #{noticeType,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{business,jdbcType=VARCHAR}, #{ssid,jdbcType=VARCHAR}, #{receivePerson,jdbcType=LONGVARCHAR}, 
      #{ccPerson,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      SELECT CONCAT(uuid_short(),'')
    </selectKey>
    insert into activity_notice_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="emailTitle != null">
        email_title,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="business != null">
        business,
      </if>
      <if test="ssid != null">
        ssid,
      </if>
      <if test="receivePerson != null">
        receive_person,
      </if>
      <if test="ccPerson != null">
        cc_person,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="activityId != null">
        #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultType="java.lang.Long">
    select count(*) from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update activity_notice_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.activityId != null">
        activity_id = #{record.activityId,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTitle != null">
        email_title = #{record.emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.noticeType != null">
        notice_type = #{record.noticeType,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.business != null">
        business = #{record.business,jdbcType=VARCHAR},
      </if>
      <if test="record.ssid != null">
        ssid = #{record.ssid,jdbcType=VARCHAR},
      </if>
      <if test="record.receivePerson != null">
        receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ccPerson != null">
        cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR},
      receive_person = #{record.receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{record.ccPerson,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update activity_notice_log
    set id = #{record.id,jdbcType=VARCHAR},
      activity_id = #{record.activityId,jdbcType=VARCHAR},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      notice_type = #{record.noticeType,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      business = #{record.business,jdbcType=VARCHAR},
      ssid = #{record.ssid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    <set>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=VARCHAR},
      </if>
      <if test="emailTitle != null">
        email_title = #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="business != null">
        business = #{business,jdbcType=VARCHAR},
      </if>
      <if test="ssid != null">
        ssid = #{ssid,jdbcType=VARCHAR},
      </if>
      <if test="receivePerson != null">
        receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="ccPerson != null">
        cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogWithBLOBs">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR},
      receive_person = #{receivePerson,jdbcType=LONGVARCHAR},
      cc_person = #{ccPerson,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLog">
    update activity_notice_log
    set activity_id = #{activityId,jdbcType=VARCHAR},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      business = #{business,jdbcType=VARCHAR},
      ssid = #{ssid,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="com.stock.accelerator.web.entity.AppActivityNoticeLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_notice_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>